- hosts: datanode
  vars_files:
      - datanode_var.yml
  vars_prompt:

    - name: ip
      prompt: " enter namenode ip : "
      private: no
  tasks:
  - name: "Copying the jdk  File"
    copy:
       src: "{{ jdk_path }}"
       dest: "/"
  - name: "Copying the hadoop File"
    copy:
       src: "{{ hadoop_software }}"
       dest: "/"
  - name: "Installing Jdk"
    shell: "rpm -ivh {{ jdk_software }}"
    register: Java
    ignore_errors: yes
  - name: "Java Installation"
    debug:
        var: Java.stdout
  - name: "Installing Hadoop"
    shell: "rpm -ivh {{ hadoop_software }}  --force"
    register: Hadoop
    ignore_errors: yes
  - name: "Hadop Installation"
    debug:
        var: Hadoop.stdout
  - name: "updating hdfs_site.xml file"
    blockinfile:
        path: /etc/hadoop/hdfs-site.xml
        insertafter: "<configuration>"
        content: |
           <property>
           <name>dfs.data.dir</name>
           <value>{{ directory_path}}</value>
           </property>
  - name: "updating core_site.xml file "
    blockinfile:
        path: /etc/hadoop/core-site.xml
        insertafter: "<configuration>"
        content: |
           <property>
           <name>fs.default.name</name>
           <value>hdfs://{{ ip }}:9001</value>
           </property>

  - name: "deleting previous directory"
    shell: "{{ directory_delete }}"
    ignore_errors: yes
  - name: "Creating a directory"
    file:
      state: directory
      path: "{{ directory_path }}"
  - name: "Starting the datanode"
    shell: "{{ start_datanode }}"
    ignore_errors: yes
    register: hadoop_started
  - name: "Started hadoop"
    debug:
     var: hadoop_started.stdout
  - name: "Java Process"
    shell: "{{ run_jps }}"
    register: jps
  - name: " java process"
    debug:
     var: jps.stdout
  - name: " hadoop report"
    shell: " {{ hadoop_report }}"
    register: report
  - name: "hadoop report"
    debug:
     var: report.stdout

